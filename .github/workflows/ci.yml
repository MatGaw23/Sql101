name: CI Build and Test

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        build_type: [Release, Debug]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Clang (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y clang-17 libc++-17-dev libc++abi-17-dev
          sudo update-alternatives --install /usr/bin/clang clang /usr/bin/clang-17 100
          sudo update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-17 100

      - name: Install dependencies (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get install -y cmake ninja-build libsqlite3-dev pkg-config

      - name: Install dependencies (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          brew install cmake ninja sqlite3 pkg-config llvm
          echo "/opt/homebrew/opt/llvm/bin" >> $GITHUB_PATH

      - name: Install dependencies (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          choco install cmake ninja sqlite
          # Install Clang via Visual Studio Build Tools or LLVM

      - name: Configure CMake
        run: |
          cmake -B build -G Ninja -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_C_COMPILER=clang

      - name: Build
        run: cmake --build build --config ${{ matrix.build_type }}

      - name: Test
        working-directory: build
        run: ctest --output-on-failure -C ${{ matrix.build_type }}

      - name: Run application (smoke test)
        working-directory: build
        run: ./bin/sql_game
